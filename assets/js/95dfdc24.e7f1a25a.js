"use strict";(self.webpackChunkhanscreations=self.webpackChunkhanscreations||[]).push([[486],{4525:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>c,frontMatter:()=>r,metadata:()=>i,toc:()=>d});var t=s(4848),o=s(8453);const r={sidebar_position:3},a=void 0,i={id:"Avatars/Materials",title:"Materials",description:"Why are there so many material slots listed for this one piece of clothing?",source:"@site/docs/Avatars/Materials.md",sourceDirName:"Avatars",slug:"/Avatars/Materials",permalink:"/HanDocs/docs/Avatars/Materials",draft:!1,unlisted:!1,editUrl:"https://github.com/hantnor/HanDocs/tree/main/docs/Avatars/Materials.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Textures",permalink:"/HanDocs/docs/Avatars/Textures"},next:{title:"Meshes",permalink:"/HanDocs/docs/Avatars/Meshes"}},l={},d=[{value:"Shaders",id:"shaders",level:2},{value:"Culling",id:"culling",level:3},{value:"Methods",id:"methods",level:2},{value:"Polytool",id:"polytool",level:3},{value:"Manual Atlassing",id:"manual-atlassing",level:3}];function h(e){const n={a:"a",code:"code",em:"em",h2:"h2",h3:"h3",li:"li",p:"p",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.p,{children:(0,t.jsx)(n.em,{children:"Why are there so many material slots listed for this one piece of clothing?"})}),"\n",(0,t.jsx)("hr",{}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Materials"})," dictate how a specific part of your avatar is rendered. This includes things like texture, color, and lighting effects."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Material slots"})," hold one material each. Depending on how your avatar is set up, you will have a varying amount of slots, allowing you to render each part of your model differently. It's important to keep the amount of material slots on an avatar ",(0,t.jsx)(n.strong,{children:"low"})," for good performance."]}),"\n",(0,t.jsx)(n.h2,{id:"shaders",children:"Shaders"}),"\n",(0,t.jsxs)(n.p,{children:["For any avatar, choosing an optimized shader is going to serve as an excellent foundation for your materials. Popular shaders like ",(0,t.jsx)(n.strong,{children:"Liltoon"}),", ",(0,t.jsx)(n.strong,{children:"Mochie's Shaders"}),", and ",(0,t.jsx)(n.strong,{children:"Poiyomi Toon"})," work excellently."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["For Quest, you are limited to what's available in ",(0,t.jsx)(n.code,{children:"VRChat > Mobile"}),". There's good reason for this!"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["If you are using ",(0,t.jsx)(n.strong,{children:"Poiyomi"}),", remember that it is a ",(0,t.jsx)(n.strong,{children:"robust"})," shader. For the capabilities it has, utilizing optimization features is a must! In-built features like ",(0,t.jsx)(n.strong,{children:"shader locking"})," come in super handy, disabling any features you may not use. Any features that you don't use, please be sure to ",(0,t.jsx)(n.strong,{children:"uncheck and disable"})," them. If an animated proprty is enabled but not used, it will add unnecessary load. Right-click these properties and uncheck the animated property."]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"culling",children:"Culling"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.em,{children:"Why can I see through one side of a wall?!"})}),"\n",(0,t.jsxs)(n.p,{children:["Avatar (and world) materials may appear one-sided due to a shader feature called ",(0,t.jsx)(n.strong,{children:"back-face culling"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["Usually when rendering an object, it is ",(0,t.jsx)(n.strong,{children:"opaque"}),". To alleviate half of the processing time rendering the other side of an object you'd normally not see, shaders can ",(0,t.jsx)(n.strong,{children:"cull"})," (remove) the backside of a mesh."]}),"\n",(0,t.jsxs)(n.p,{children:["Quest shaders like ",(0,t.jsx)(n.strong,{children:"Standard Lite"})," and ",(0,t.jsx)(n.strong,{children:"Toon Lit"})," have this property to ensure optimized performance on mobile platforms. For PC shaders like ",(0,t.jsx)(n.strong,{children:"Poiyomi Toon"}),", this setting can be turned off."]}),"\n",(0,t.jsx)(n.h2,{id:"methods",children:"Methods"}),"\n",(0,t.jsx)("hr",{}),"\n",(0,t.jsx)(n.h3,{id:"polytool",children:"Polytool"}),"\n",(0,t.jsxs)(n.p,{children:["Polytool is a ",(0,t.jsx)(n.strong,{children:"paid"})," Unity addon by ",(0,t.jsx)(n.a,{href:"https://markcreator.gumroad.com/l/Polytool",children:(0,t.jsx)(n.strong,{children:"Markoragon"})})," to simplify the process of optimizing materials. It can be used to merge and ",(0,t.jsx)(n.strong,{children:"atlas"})," textures and materials."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Atlassing"})," refers to combining multiple textures onto one material, instead of having them split up among many materials."]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"manual-atlassing",children:"Manual Atlassing"}),"\n",(0,t.jsxs)(n.p,{children:["If you prefer to have more direct control over what polygons are removed, you can do this manually in ",(0,t.jsx)(n.strong,{children:"Blender"}),". (documentation on this through Beanthusiast TBA)"]})]})}function c(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(h,{...e})}):h(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>a,x:()=>i});var t=s(6540);const o={},r=t.createContext(o);function a(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);